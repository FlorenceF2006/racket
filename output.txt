(compile '
(vars [(n 10) (fj 1) (fjm1 0) (t 0) (ans 0)]
   (iif (= n 0)
        (set ans fjm1)
        (seq
         (while (> n 1)
            (set t fj)
            (set fj (+ fj fjm1))
            (set fjm1 t)
            (set n (- n 1)))
         (set ans fj)))
   (print ans)))

'((equal _0 n 0)
  (branch _0 _1)
  (jump _2)
  (label _1)
  (move ans fjm1)
  (jump _3)
  (label _2)
  (label _4)
  (gt _7 n 1)
  (branch _7 _5)
  (jump _6)
  (label _5)
  (move fjm1 fj)
  (add _8 fj fjm1)
  (move fj _8)
  (sub _9 n 1)
  (move n _9)
  (jump _4)
  (label _6)
  (move ans fj)
  (label _3)
  (print-val ans)
  (equal _10 n 0)
  (branch _10 _11)
  (jump _12)
  (label _11)
  (move ans fjm1)
  (jump _13)
  (label _12)
  (label _14)
  (gt _17 n 1)
  (branch _17 _15)
  (jump _16)
  (label _15)
  (move t fj)
  (add _18 fj fjm1)
  (move fj _18)
  (move fjm1 t)
  (sub _19 n 1)
  (move n _19)
  (jump _14)
  (label _16)
  (move ans fj)
  (label _13)
  (print-val ans)
  (halt)
  (data n 10)
  (data fj 1)
  (data fjm1 0)
  (data t 0)
  (data ans 0)
  (data _10 #f)
  (data _17 #f)
  (data _18 0)
  (data _19 0))
